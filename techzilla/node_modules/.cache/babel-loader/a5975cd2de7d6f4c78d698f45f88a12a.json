{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\TechZilla\\\\techZilla\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport QuestionLists from './components/QuestionLists';\nimport { useMutation, queryCache } from 'react-query';\nimport { Box, Button, Flex, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure, FormControl, FormLabel, Input, Textarea } from '@chakra-ui/core';\nimport Axios from 'axios';\n\nfunction App() {\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [state, setState] = useState({\n    title: '',\n    body: '',\n    author: 'Ganesh'\n  });\n  const [mutate] = useMutation(values => {\n    Axios.post('http://localhost:3000/posts', values);\n  }, {\n    onSuccess: () => {\n      queryCache.refetchQueries('posts');\n    }\n  });\n\n  const onAddQuestion = async () => {\n    await mutate(state);\n    onClose();\n    setState({\n      title: '',\n      body: '',\n      author: 'Ganesh'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    flexDirection: \"column\",\n    maxW: \"1080px\",\n    margin: \"auto\",\n    mt: \"50px\",\n    bg: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    w: \"50%\",\n    margin: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    width: \"100%\",\n    variantColor: 'green',\n    onClick: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Add Question\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ModalContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Modal Title\"), /*#__PURE__*/React.createElement(ModalCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"title\",\n    onChange: e => setState({ ...state,\n      title: e.target.value\n    }),\n    boxSizing: \"border-box\",\n    \"aria-describedby\": \"title-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    htmlFor: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Body\"), /*#__PURE__*/React.createElement(Textarea, {\n    placeholder: \"Here is a Question Detail\",\n    onChange: e => setState({ ...state,\n      body: e.target.value\n    }),\n    boxSizing: \"border-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variantColor: \"blue\",\n    mr: 3,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"ghost\",\n    onClick: onAddQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))), /*#__PURE__*/React.createElement(QuestionLists, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/TechZilla/techZilla/src/App.js"],"names":["React","useState","QuestionLists","useMutation","queryCache","Box","Button","Flex","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","FormControl","FormLabel","Input","Textarea","Axios","App","isOpen","onOpen","onClose","state","setState","title","body","author","mutate","values","post","onSuccess","refetchQueries","onAddQuestion","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport QuestionLists from './components/QuestionLists';\r\nimport { useMutation, queryCache } from 'react-query';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Textarea,\r\n} from '@chakra-ui/core';\r\nimport Axios from 'axios';\r\n\r\nfunction App() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const [state, setState] = useState({\r\n    title: '',\r\n    body: '',\r\n    author: 'Ganesh',\r\n  });\r\n\r\n  const [mutate] = useMutation(\r\n    (values) => {\r\n      Axios.post('http://localhost:3000/posts', values);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        queryCache.refetchQueries('posts');\r\n      },\r\n    }\r\n  );\r\n\r\n  const onAddQuestion = async () => {\r\n    await mutate(state);\r\n\r\n    onClose();\r\n    setState({ title: '', body: '', author: 'Ganesh' });\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      flexDirection=\"column\"\r\n      maxW=\"1080px\"\r\n      margin=\"auto\"\r\n      mt=\"50px\"\r\n      bg=\"background\"\r\n    >\r\n      <Box w=\"50%\" margin=\"auto\">\r\n        <Button width=\"100%\" variantColor={'green'} onClick={onOpen}>\r\n          Add Question\r\n        </Button>\r\n\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Modal Title</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"title\">Title</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"title\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, title: e.target.value })\r\n                  }\r\n                  boxSizing=\"border-box\"\r\n                  aria-describedby=\"title-helper-text\"\r\n                />\r\n              </FormControl>\r\n\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"body\">Body</FormLabel>\r\n                <Textarea\r\n                  placeholder=\"Here is a Question Detail\"\r\n                  onChange={(e) => setState({ ...state, body: e.target.value })}\r\n                  boxSizing=\"border-box\"\r\n                />\r\n              </FormControl>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button variantColor=\"blue\" mr={3} onClick={onClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"ghost\" onClick={onAddQuestion}>\r\n                Submit\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </Box>\r\n      <QuestionLists />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}